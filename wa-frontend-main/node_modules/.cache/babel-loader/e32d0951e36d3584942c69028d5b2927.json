{"ast":null,"code":"import _slicedToArray from \"C:/Users/Teo/Desktop/CollegeSearch/wa-frontend-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport config from \"../config\";\nexport default {\n  data: function data() {\n    return {\n      search: '',\n      display_per_page: 6,\n      show_start: 0,\n      show_end: 6,\n      page: 1,\n      card_items: [],\n      authenticated: localStorage.getItem('authenticated'),\n      userEmail: localStorage.getItem('userEmail'),\n      userId: localStorage.getItem('userId')\n    };\n  },\n  name: 'card',\n  components: {},\n  mounted: function mounted() {\n    var _this = this;\n\n    this.axios.get(config.API_LOCATION + '/College/getFollowCollege/' + this.userId).then(function (response) {\n      for (var _i = 0, _Object$entries = Object.entries(response.data); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        _this.card_items.push(value);\n      }\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  },\n  methods: {\n    gotoPage: function gotoPage(n) {\n      this.page = n;\n      this.show_start = (n - 1) * this.display_per_page;\n      this.show_end = Math.min(this.show_start + this.display_per_page, this.filteredCardList.length);\n    },\n    favourite: function favourite(college_id, card_id) {\n      if (!this.authenticated) this.$router.push({\n        name: 'login'\n      });else {\n        var follow;\n        var index = (this.page - 1) * this.display_per_page + card_id;\n\n        if (this.filteredCardList[index]['follow'] == \"1\") {\n          this.filteredCardList[index]['follow'] = \"0\";\n          follow = 0;\n        } else {\n          this.filteredCardList[index]['follow'] = \"1\";\n          follow = 1;\n        }\n\n        var params = new URLSearchParams();\n        params.append('college_id', college_id);\n        params.append('user_id', this.userId);\n        params.append('follow', follow);\n        this.axios.post('http://localhost/college_backend/College/setFollowCollege/', params, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        }).then(function (response) {\n          if (response.data != \"failed\") {} else {}\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      }\n    },\n    searchChange: function searchChange() {\n      // nakon searcha automatski ide na stranicu 1\n      this.gotoPage(1);\n    }\n  },\n  computed: {\n    pageNumbers: function pageNumbers() {\n      // broj stranica je broj kartica / display_perpage\n      return Math.ceil(this.filteredCardList.length / this.display_per_page);\n    },\n    filteredCardList: function filteredCardList() {\n      var _this2 = this;\n\n      //  filtrira stranice po searchu grada\n      return this.card_items.filter(function (item) {\n        return item.city.toLowerCase().includes(_this2.search.toLowerCase());\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;EAEAA,IAFA,kBAEA;IACA;MACAC,UADA;MAEAC,mBAFA;MAGAC,aAHA;MAIAC,WAJA;MAKAC,OALA;MAMAC,cANA;MAOAC,oDAPA;MAQAC,4CARA;MASAC;IATA;EAWA,CAdA;EAeAC,YAfA;EAgBAC,cAhBA;EAmBAC,OAnBA,qBAmBA;IAAA;;IAEA,iFACAC,IADA,CACA;MACA;QAAA;QAAA;QAAA;;QACA;MACA;IACA,CALA,WAMA;MACAC;IACA,CARA;EASA,CA9BA;EA+BAC;IACAC;MACA;MACA;MACA;IACA,CALA;IAMAC;MACA,yBACA;QAAAP;MAAA,GADA,KAGA;QACA;QACA;;QACA;UACA;UACAQ;QACA,CAHA,MAIA;UACA;UACAA;QACA;;QAKA;QACAC;QACAA;QACAA;QAEA;UAAAC;YACA;UADA;QAAA,GAGAP,IAHA,CAGA;UACA,gCACA,CADA,MACA,CACA;QACA,CAPA,WAQA;UACAC;QACA,CAVA;MAWA;IAGA,CA5CA;IA6CAO;MAAA;MACA;IACA;EA/CA,CA/BA;EAgFAC;IACAC;MAAA;MACA;IACA,CAHA;IAIAC,gBAJA,8BAIA;MAAA;;MAAA;MACA;QACA;MACA,CAFA;IAIA;EATA;AAhFA","names":["data","search","display_per_page","show_start","show_end","page","card_items","authenticated","userEmail","userId","name","components","mounted","then","console","methods","gotoPage","favourite","follow","params","headers","searchChange","computed","pageNumbers","filteredCardList"],"sourceRoot":"src/views","sources":["Card.vue"],"sourcesContent":["<template v-if=\"card_items\">\r\n  <div id=\"card-view\">\r\n    <div class=\"search-wrapper\">\r\n        <input type=\"text\" v-model=\"search\" placeholder=\"Search city..\" v-on:keydown=\"searchChange\"/>\r\n        <label>Search city:</label>\r\n    </div>\r\n    <div class=\"wrapper\">\r\n        <p class=\"no-match\" v-if=\"filteredCardList.length==0\">No matched citiy</p>\r\n        <div class=\"card\" v-for=\"(item, index) in filteredCardList.slice(show_start, show_end)\">\r\n            <a>\r\n                <router-link :to=\"{ name: 'college', params: { college_id: item.id } }\">\r\n                    <img v-bind:src=\"'/assets/colleges/' + item.logo\"/>\r\n                </router-link>\r\n                <router-link :to=\"{ name: 'college', params: { college_id: item.id } }\" style=\"text-decoration: none;\">\r\n                    <p class=\"college-name\">{{ item.name }}</p>\r\n                </router-link>\r\n                <router-link :to=\"{ name: 'college', params: { college_id: item.id } }\" style=\"text-decoration: none;\">\r\n                    <p class=\"college-city\">{{ item.city }}</p>\r\n                </router-link>\r\n                \r\n                <i v-if=\"item.follow == 1\" class=\"fa fa-star btn-favourite\" v-on:click=\"favourite(item.id, index)\"></i>\r\n                <i v-if=\"item.follow != 1\" class=\"fa fa-star-o btn-favourite\" v-on:click=\"favourite(item.id, index)\"></i>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"pagination\">\r\n        <div v-for=\"n in pageNumbers\" class=\"btn-page card\" v-bind:class=\"{active: n==page}\" v-on:click=\"gotoPage(n)\">\r\n            {{ n }}\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport config from \"../config\"\r\nexport default {\r\n    \r\n    data() {\r\n      return {\r\n        search : '',            \r\n        display_per_page : 6,   \r\n        show_start : 0,         \r\n        show_end : 6,           \r\n        page : 1,               \r\n        card_items: [],         \r\n        authenticated : localStorage.getItem('authenticated'),  \r\n        userEmail : localStorage.getItem('userEmail'),          \r\n        userId : localStorage.getItem('userId')                 \r\n      };\r\n    },\r\n    name: 'card',\r\n    components: {     \r\n        \r\n    },\r\n    mounted(){\r\n        \r\n        this.axios.get(config.API_LOCATION + '/College/getFollowCollege/' + this.userId)\r\n        .then((response) => {\r\n            for (const [key, value] of Object.entries(response.data)) { \r\n                this.card_items.push(value);       \r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error) \r\n        })\r\n    },\r\n    methods: {\r\n       gotoPage: function (n) {     \r\n           this.page = n;\r\n           this.show_start = (n - 1) * this.display_per_page;\r\n           this.show_end = Math.min(this.show_start + this.display_per_page, this.filteredCardList.length); \r\n       },\r\n       favourite: function (college_id, card_id) {  \r\n            if(!this.authenticated)            \r\n              this.$router.push({ name: 'login' });\r\n            else                                \r\n            {\r\n                var follow;\r\n                var index = (this.page - 1) * this.display_per_page + card_id;\r\n                if(this.filteredCardList[index]['follow'] == \"1\"){\r\n                    this.filteredCardList[index]['follow'] = \"0\";\r\n                    follow = 0;\r\n                }\r\n                else{\r\n                    this.filteredCardList[index]['follow'] = \"1\";\r\n                    follow = 1;\r\n                }\r\n                \r\n\r\n                \r\n\r\n                const params = new URLSearchParams();       \r\n                params.append('college_id', college_id);\r\n                params.append('user_id', this.userId);\r\n                params.append('follow', follow);\r\n\r\n                this.axios.post('http://localhost/college_backend/College/setFollowCollege/', params, {headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                }})\r\n                .then((response) => {\r\n                    if(response.data != \"failed\"){\r\n                    }else{\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n            }\r\n\r\n            \r\n       },\r\n       searchChange: function(){        // nakon searcha automatski ide na stranicu 1\r\n           this.gotoPage(1);\r\n       }\r\n    },\r\n    computed: {\r\n        pageNumbers: function(){    // broj stranica je broj kartica / display_perpage\r\n            return Math.ceil(this.filteredCardList.length/this.display_per_page);\r\n        },\r\n        filteredCardList() {        //  filtrira stranice po searchu grada\r\n            return this.card_items.filter(item => {\r\n                return item.city.toLowerCase().includes(this.search.toLowerCase())\r\n            })\r\n            \r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n    div#card-view {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n\r\n        .search-wrapper {\r\n            \r\n            position: relative;\r\n            label {\r\n                position: absolute;\r\n                font-size: 18px;\r\n                color: rgba(0,0,0,.50);\r\n                top: 8px;\r\n                left: 12px;\r\n                z-index: -1;\r\n                transition: .15s all ease-in-out;\r\n            }\r\n            input {\r\n                padding: 10px;\r\n                font-size: 16px;\r\n                color: rgba(0,0,0,.70);\r\n                border: 1px solid rgba(0,0,0,.12);\r\n                transition: .15s all ease-in-out;\r\n                background: white;\r\n                &:focus {\r\n                    outline: none;\r\n                    transform: scale(1.05);\r\n                    & + label  {\r\n                    font-size: 10px;\r\n                    transform: translateY(-24px) translateX(-12px);\r\n                    }\r\n                }\r\n                &::-webkit-input-placeholder {\r\n                    font-size: 12px;\r\n                    color: rgba(0,0,0,.50);\r\n                    font-weight: 100;\r\n                }\r\n            }\r\n        }\r\n        .wrapper {\r\n            display: flex;\r\n            max-width: 100%;\r\n            width: 100%;\r\n            flex-wrap: wrap;\r\n            padding-top: 12px;\r\n        }\r\n        .wrapper .no-match {\r\n            margin: auto;\r\n            font-size: 40px;\r\n            color: #03A9F4;\r\n            padding-top: 50px;\r\n        }\r\n        .card {\r\n            box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 6px, rgba(0, 0, 0, 0.117647) 0px 1px 4px;\r\n            width: 30%;\r\n            margin: 12px;\r\n            transition: .15s all ease-in-out;\r\n            &:hover {\r\n                transform: scale(1.1);\r\n            }\r\n            a {\r\n                p {\r\n                    text-decoration: none;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    align-items: center;\r\n                }\r\n                p.college-name {\r\n                    padding-top: 12px;\r\n                    font-size: 20px;\r\n                    color: #03A9F4;\r\n                    cursor: pointer;\r\n                }\r\n                p.college-city {\r\n                    font-size: 16px;\r\n                    color: #3f4142;\r\n                    cursor: pointer;\r\n                }\r\n                img {\r\n                    height: 100px;\r\n                    margin-top: 20px;\r\n                    cursor: pointer;\r\n                }\r\n                small {\r\n                    font-size: 10px;\r\n                    padding: 4px;\r\n                }\r\n            }\r\n            .btn-favourite{\r\n                position: absolute;\r\n                right: 20px;\r\n                top: 20px;\r\n                font-size: 25px;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n        .pagination {\r\n            display: flex;\r\n        }\r\n        .card.btn-page {\r\n            width: 35px;\r\n            height: 35px;\r\n            cursor: pointer;\r\n            justify-content: center;\r\n        }\r\n\r\n        .btn-page.active {\r\n            background: royalblue;\r\n        }\r\n    }\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}